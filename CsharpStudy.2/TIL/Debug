## Debug

**1. 디버깅**

: 소프트웨어의 오류를 식별하고 수정하는 과정

**2. 디버깅의 중요성**

- 소프트웨어가 올바르게 작동하는지 확인하는 데 필수
- 디버깅을 하지 않으면 소프트웨어 오류가 발생하거나 제대로 작동하지 않음

**3. 디버깅 기술**

- 로깅
    - 코드가 실행되는 동안 발생하는 이벤트 기록
    
    ```cpp
    Console.WriteLine();
    Debug.Log();
    ```
    
- 브레이크 포인트
    - 코드의 특정 지점에서 실행을 중지하는 데 사용
    - 디버그 모드로 실행하여 원하는 위치에서 코드 중지
- 디버거
    - 디버깅을 돕는 도구
    - 다양한 기능을 제공하며 디버깅을 쉽게 만들 수 있음
    - 브레이크 포인트에서 멈추거나 에러가 나면 여러 도구를 활용하여 에러를 찾음
- 스택 추적
    - 호출 스택을 추적하여 코드가 실행 중인 위치를 확인하는 데 사용
    - 어떤 경로로 코드가 실행되었는지 추적

**4. 디버깅 팁**

- 작게 시작
    - 작은 문제부터 시작
    - 큰 문제로 넘어가기 전에 한 번에 한 가지 문제에 집중
- 단순하게 유지
    - 코드를 단순하게 유지
    - 오류의 원인을 파악하기 쉬움
- 인내심
    - 시간이 많이 걸릴 수 있으므로 인내심 갖기
    - 즉시 오류를 발견하지 못하더라도 낙심 금지