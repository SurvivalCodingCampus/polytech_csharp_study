# 20250902 수업내용 정리

주제 : 여러가지 데이터 형식

CSV
- 데이터를 콤마로 나누는 구분하는 형식
- 형식은 텍스트 파일
ex) String str = "홍길동, 한석봉, 신사임당"

Properties 형식의 파일 읽기
- Properties 클래스를 사용하여 키(key)와 값(value)의 쌍으로 읽고 쓰기가 가능
- 중간 중간 조작하는 경우 foreach를 사용하지 않음

XML 형식
- <> 태그를 활용한 기술 방식
- 포함관계를 기술할 수 있다
-DOM Parser, SAX Parser등을 통해 파서를 제작할 필요가 있다
- json 형식에 비하면 사람과 컴퓨터 모두에게 사용하기 어려움

JSON 형식
- 네트워크 통신에서 가장 많이 사용
- XLM에 비해 적은 용량
- []로 리스트, {}로 객체를 표현
- 키(key) : 값(value)형태
- Dictionary<string, object>과 똑같이 생겼음

컴퓨터 세계에서의 직렬화의 의미
- 테이터 구조나 객체 상태를 저장하고, 나중에 재구성할 수 있는 포맷으로 변환하는 과정
- 직렬화 : 서로 다른 프로그램이 통신하기 위해, 객체를 파일이나 네트워크에서 전송하기 쉬운 형태로 변환하는 과정
- 클래스 내부의 필드에 다른 클래스가 있다면 모두 직렬화 처리를 해 줘야 함

직렬화(Serizlization)
주로 서버와 Json으로 통신을 할 것이기 때문에 Json 직렬화를 기본
직렬화 : 클래스 -> Json
역직렬화 : Json -> 클래스
저장히기 위해 직렬화가 필요

C#과 Unity에서는 주로 Newtonsoft.Json 패키지를 사용

직렬화 불가능한 경우
- static 멤버
- 순환 참조
- private / internal 멤버
private setter만 있는 멤버

