Til : c# 기초 1.

1)
'IsNullOrEmpty' -> 문자열이 빈 문자열인지 null타입인지 확인하는 명령어

"  " -> '공백' 문자열이므로 빈 문자열이 아님


'IsNullOrWhiteSpace' -> 빈 문자열, 공백 문자열, null 타입인지 확인 (\t, \n도 포함됨)

Trim -> 문자열 좌우 맨 끝 공백제거


2)
숫자 연산은 처리 속도가 빠르지만 문자열에 대한 연산은 처리 속도가 다소 걸린다.
>> 문자열을 더하거나 빼면 기존의 메모리 주소에 저장하는 것이 아닌 heap에 새로 메모리 주소를 지정하여
문자열을 연산한 최종 문자열을 순차적으로 기록하기 때문에

StringBuilder (sb) -> 문자열 연산을 빠르게 처리하기 위해 사용하는 명령어

"String 은 불변, StringBuilder는 변함의 속성을 가지고 있다"


heap에서 string만 별도로 관리함 >> string pool
특정 문자열에 대하여 새로 주소값(hashcode)을 생성할때 이미 heap에 존재하면 새로 생성하는 것이 아닌
존재하여 저장된 주소값을 가져와서 사용함

주소값을 지칭하는 별칭이 주체가 아닌 해당 별칭이 가리키는 문자열이 주체가 된다.

단, new를 이용하여 새로 문자열 string을 생성하면 새롭게 메모리에 저장하는 방식이다 보니
같은 문자열이라 하더라도 hashcode가 다르다.


3)
const / static

생성 시기의 차이